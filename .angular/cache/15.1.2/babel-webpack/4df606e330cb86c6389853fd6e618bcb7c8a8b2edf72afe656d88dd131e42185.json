{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet Card = class Card {\n  constructor(suit, value) {\n    this.suit = suit;\n    this.value = value;\n    this.faceUp = false;\n  }\n  getSuit() {\n    return this.suit;\n  }\n  getValue() {\n    return this.value;\n  }\n  flipCard() {\n    this.faceUp = !this.faceUp;\n  }\n};\nCard = __decorate([Component({\n  selector: 'app-solitaire',\n  templateUrl: './solitaire.component.html',\n  styleUrls: ['./solitaire.component.scss']\n})], Card);\nexport class SolitaireComponent {\n  constructor() {\n    this.cards = [[], [], [], []];\n    this.gameState = 'IN_PROGRESS';\n    // Initialize properties here\n    this.stock = [];\n    this.tableaus = [[], [], [], [], [], [], []];\n    this.foundations = [[], [], [], []];\n    this.fromPile = null;\n    this.toPile = null;\n  }\n  moveCard(fromPile, toPile) {\n    let card = this.piles[fromPile].pop();\n    this.piles[toPile].push(card);\n  }\n  checkForWin() {\n    // check for win logic here\n  }\n  reset() {\n    // reset game logic here\n  }\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOzC,IAAMC,IAAI,GAAV,MAAMA,IAAI;EAKRC,YAAYC,IAAY,EAAEC,KAAa;IACrC,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAG,KAAK;EACrB;EAEAC,OAAO;IACL,OAAO,IAAI,CAACH,IAAI;EAClB;EAEAI,QAAQ;IACN,OAAO,IAAI,CAACH,KAAK;EACnB;EAEAI,QAAQ;IACN,IAAI,CAACH,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;EAC5B;CACD;AAtBKJ,IAAI,eALTD,SAAS,CAAC;EACTS,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACIV,IAAI,CAsBT;AAED,OAAM,MAAOW,kBAAkB;EAS7BV;IARA,UAAK,GAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAClC,cAAS,GAAmC,aAAa;IAQvD;IACA,IAAI,CAACW,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC5C,IAAI,CAACC,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnC,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEAC,QAAQ,CAACF,QAAgB,EAAEC,MAAc;IACvC,IAAIE,IAAI,GAAG,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAACK,GAAG,EAAE;IACrC,IAAI,CAACD,KAAK,CAACH,MAAM,CAAC,CAACK,IAAI,CAACH,IAAI,CAAC;EAC/B;EAGAI,WAAW;IACT;EAAA;EAGFC,KAAK;IACH;EAAA","names":["Component","Card","constructor","suit","value","faceUp","getSuit","getValue","flipCard","selector","templateUrl","styleUrls","SolitaireComponent","stock","tableaus","foundations","fromPile","toPile","moveCard","card","piles","pop","push","checkForWin","reset"],"sourceRoot":"","sources":["C:\\project\\typescript\\my-app\\src\\app\\solitaire\\solitaire.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-solitaire',\n  templateUrl: './solitaire.component.html',\n  styleUrls: ['./solitaire.component.scss']\n})\nclass Card {\n  private suit: string;\n  private value: string;\n  private faceUp: boolean;\n\n  constructor(suit: string, value: string) {\n    this.suit = suit;\n    this.value = value;\n    this.faceUp = false;\n  }\n\n  getSuit() {\n    return this.suit;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  flipCard() {\n    this.faceUp = !this.faceUp;\n  }\n}\n\nexport class SolitaireComponent {\n  cards: Card[][] = [[], [], [], []];\n  gameState: 'WON' | 'LOST' | 'IN_PROGRESS' = 'IN_PROGRESS';\n  stock: any[];\n  tableaus: any[][];\n  foundations: any[][];\n  fromPile: any;\n  toPile: any;\n\n  constructor() {\n    // Initialize properties here\n    this.stock = [];\n    this.tableaus = [[], [], [], [], [], [], []];\n    this.foundations = [[], [], [], []];\n    this.fromPile = null;\n    this.toPile = null;\n  }\n\n  moveCard(fromPile: number, toPile: number) {\n    let card = this.piles[fromPile].pop();\n    this.piles[toPile].push(card);\n  }\n\n\n  checkForWin() {\n    // check for win logic here\n  }\n\n  reset() {\n    // reset game logic here\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}